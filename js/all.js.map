{"version":3,"sources":["all.js"],"names":["addEventListener","target","header","document","querySelector","menuBtn","menu","modalOpenElems","querySelectorAll","modal","modalClose","e","preventDefault","innerText","classList","toggle","add","closeModal","Swiper","loop","autoplay","clickable","breakpoints","slidesPerView","1400","swiper","spaceBetween","AOS","init","delay","duration","mirror","anchorPlacement","articleContainer","articles","_toConsumableArray","filterArticles","type","filter","article","dataset","articleType","once","innerHTML","filteredArticles","forEach","dom","appendChild","blogMenu","nodeName","link"],"mappings":"++BAAA,IAQQA,UAGFC,WAXAC,OAASC,SAASC,cAAc,iBAChCC,QAAUF,SAASC,cAAc,sBACjCE,KAAOH,SAASC,cAAc,qBAC9BG,eAAiBJ,SAASK,iBAAiB,qBAC3CC,MAAQN,SAASC,cAAc,gBAC/BM,WAAaP,SAASC,cAAc,sBAG1CC,QAAQL,iBAAiB,QAAS,SAASW,GACzCA,EAAEC,iBACyB,SAAvBD,EAAEV,OAAOY,UACXF,EAAEV,OAAOY,UAAY,QAErBF,EAAEV,OAAOY,UAAY,OAZzBP,KAAMD,UAAUF,OAASC,YACzBD,SAAaA,cAASC,QAATU,UAAuBC,OAAA,eAkBhCN,QAZIT,UAAAA,SAAAA,GACJY,EAAAA,iBAcAH,MAAMK,UAAUE,IAAI,SAZlBf,WAAOY,SAATF,GADFA,EAAAC,iBAGED,MAAEV,UAAOY,OAAY,SAEvBP,eAAeS,QAAO,SAAAN,GACtBN,EAAQH,iBAAe,QAAQc,aAiB/BJ,WAAWV,iBAAiB,QAASiB,aAVnCR,IAAAA,OAAMK,IAANI,OAAoB,UAApB,CACDC,MAHD,EAkBAC,UAAU,EAbRT,WAAEC,CACFH,GAAAA,wBAFFY,WAAA,GAKAd,MAAAA,IACEE,aAAMT,GACPsB,YAFD,CAGAZ,IAAAA,CAGFa,cAAA,GAeIC,KAAM,CAdJC,cAAaP,EACbQ,aAD+B,OAIvBC,IAJuBC,OASnCF,IAAAA,KAAAA,CAGIH,OAAAA,IADGM,MADM,EAIXC,SAAM,KACJP,OAAAA,OACAG,MAAAA,EAFIK,QAAA,EAJKC,gBAAA,eAcfL,IAAIC,SAAKzB,SAAAC,cAAA,oBACP6B,iBAAA9B,SAAAC,cAAA,4BACA8B,SAAAC,mBAAAhC,SAAAK,iBAAA,wBACa4B,eAAA,SAAAC,GACbR,IAAAA,EAJO,GAKPC,EADU,QAAAO,EAJHF,mBAAAD,UAAAA,SAAAI,OAAA,SAAAC,GAAA,OAAAA,EAAAC,QAAAC,cAAAJ,IAOPK,iBAPOC,UAAA,GAOKC,EAAAC,QAAA,SAAAC,GAAA,OAAAb,iBAAAc,YAAAD,MAEZd,UAoBAgB,SAAShD,iBAAiB,QAAS,SAAUW,GAE3C,IAlBU0B,EADd1B,EAAAC,iBAmB8B,MAAtBD,EAAEV,OAAOgD,WAlBHZ,EAAGlC,EAAAA,OAASC,QAAAA,SACpB6B,eAAgBI,GAoBFW,SAASxC,iBAAiB,oBAnBhCqC,QAAA,SAAAK,GAAA,OAAAA,EAAApC,UAAgBN,OAAAA,YAqBxBG,EAAEV,OAAOa,UAAUE,IAAI","file":"all.js","sourcesContent":["const header = document.querySelector('[data-header]');\nconst menuBtn = document.querySelector('[data-menu-button]');\nconst menu = document.querySelector('[data-menu-phone]');\nconst modalOpenElems = document.querySelectorAll('[data-modal-open]');\nconst modal = document.querySelector('[data-modal]');\nconst modalClose = document.querySelector('[data-modal-close]');\n\n//  漢堡選單切換\nmenuBtn.addEventListener('click', function(e) {\n  e.preventDefault();\n  if (e.target.innerText === 'menu') {\n    e.target.innerText = 'close';\n  } else {\n    e.target.innerText = 'menu';\n  }\n  menu.classList.toggle('showMenu');\n  document.querySelector('body').classList.toggle('bodyFixed');\n})\n\n// modal 視窗\nif (modal) {\n  const showModal = (e) => {\n    e.preventDefault();\n    modal.classList.add('open');\n  }\n  const closeModal = (e) => {\n    e.preventDefault();\n    modal.classList.remove('open');\n  }\n\n  modalOpenElems.forEach(modal => {\n    modal.addEventListener('click', showModal);\n  })\n  modalClose.addEventListener('click', closeModal);\n}\n\n// 輪播效果\nconst swiper = new Swiper('.swiper', {\n  loop: true,\n  autoplay: true,\n  // If we need pagination\n  pagination: {\n    el: '.my-custom-pagination',\n    clickable: true,\n  },\n  speed: 400,\n  spaceBetween: 20,\n  breakpoints: {\n    768: {\n      slidesPerView: 2,\n    },\n    1400: {\n      slidesPerView: 3,\n      spaceBetween: 30\n    },\n  }\n});\n\n// aos 動畫\nAOS.init();\n\nAOS.init({\n  // Global settings:\n  // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:\n  offset: 120, // offset (in px) from the original trigger point\n  delay: 0, // values from 0 to 3000, with step 50ms\n  duration: 1500, // values from 0 to 3000, with step 50ms\n  easing: 'ease', // default easing for AOS animations\n  once: true, // whether animation should happen only once - while scrolling down\n  mirror: false, // whether elements should animate out while scrolling past them\n  anchorPlacement: 'top-bottom', // defines which position of the element regarding to window should trigger the animation\n});\n\n// 部落格文章篩選功能\nconst blogMenu = document.querySelector('[data-blog-menu]');\nconst articleContainer = document.querySelector('[data-article-container]');\nconst articles = [...document.querySelectorAll('[data-article-type]')];\n\nconst filterArticles = (type) => {\n  let filteredArticles = [];\n  if (type === 'all') {\n    filteredArticles = [...articles];\n  } else {\n    filteredArticles = articles.filter(article => article.dataset.articleType === type);\n  }\n  articleContainer.innerHTML = '';\n  filteredArticles.forEach(dom => articleContainer.appendChild(dom));\n}\n\nif (blogMenu) {\n  blogMenu.addEventListener('click', function (e) {\n    e.preventDefault();\n    if (e.target.nodeName === 'A') {\n      const type = e.target.dataset.menuType;\n      filterArticles(type);\n      const links = blogMenu.querySelectorAll('[data-menu-type]');\n      links.forEach(link => link.classList.remove('active'));\n      e.target.classList.add('active');\n    }\n  })\n}\n"]}